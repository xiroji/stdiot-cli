{"version":3,"sources":["plugin.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAIa,MAAM,WAAN,MAAM,GAEf,SAFS,MAAM,CAEH,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAc;QAAZ,KAAK,yDAAG,EAAE;;0BAF7C,MAAM;;AAGX,QAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,QAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,QAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,QAAI,CAAC,KAAK,GAAG,KAAK,CAAC;CACtB;;IAGgB,eAAe;aAAf,eAAe;8BAAf,eAAe;;;iBAAf,eAAe;;qCAEnB;AACT,gBAAI,IAAI,GAAG,EAAE,CAAC;;AAEd,gBAAI,OAAO,CAAC,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AACnD,oBAAI,CAAC,IAAI,CAAC,eAAK,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,oBAAI,GAAG,IAAI,CAAC,MAAM,CACd,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;aACnC;;AAED,gBAAI,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE;AACvB,oBAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;aACpC;;AAED,gBAAI,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE;AAClB,oBAAI,CAAC,IAAI,CAAC,eAAK,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC,CAAC;AAC1D,oBAAI,CAAC,IAAI,CAAC,eAAK,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC;aAE3D;;AAED,gBAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE;AAC5C,oBAAI,CAAC,IAAI,CAAC,eAAK,IAAI,CACf,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAAC,CAAC;aAClE;;AAED,mBAAO,IAAI,CAAC;SACf;;;qCAEY,MAAM,EAAqB;gBAAnB,YAAY,yDAAG,EAAE;;AAClC,wBAAY,GAAG,wBAAS,YAAY,EAAE;AAClC,mBAAG,EAAE,QAAQ;AAAA,aAChB,CAAC,CAAC;;AAEH,gBAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;AAC5B,oBAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,eAAK,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE;AACvD,2BAAO,KAAK,CAAC;iBAChB;aACJ;;AAED,mBAAO,IAAI,CAAC;SACf;;;sCAEqD;gBAA1C,IAAI,yDAAG,IAAI;;;;gBAAE,WAAW,yDAAG,EAAE;gBAAE,IAAI,yDAAG,EAAE;;AAChD,gBAAI,GAAG,wBAAS,IAAI,EAAE;AAClB,qBAAK,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC;AACrB,uBAAO,EAAE,EAAE;aACd,CAAC,CAAC;;AAEH,gBAAI,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;;AAExB,uBAAW,CAAC,OAAO,CAAC,UAAA,UAAU,EAAI;AAC9B,oBAAI,YAAY,GAAG,IAAI,CAAC;;AAExB,oBAAI;AACA,gCAAY,GAAG,aAAG,WAAW,CAAC,UAAU,CAAC,CAAC;iBAC7C,CAAC,OAAO,CAAC,EAAE;AACR,2BAAO;iBACV;;AAED,oBAAI,YAAY,EAAE;AACd,gCAAY,CAAC,OAAO,CAAC,UAAA,UAAU,EAAI;AAC/B,4BAAI,IAAI,GAAG,aAAG,QAAQ,CAAC,eAAK,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC;;AAE1D,4BAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AACvB,gCAAI,eAAe,GAAG,UAAU,CAAC,OAAO,CACpC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;;AAE9B,gCAAI,MAAM,GAAG,IAAI,MAAM,CAAC,UAAU,EAAE,UAAU,EAC1C,eAAK,QAAQ,CAAC,eAAe,EAAE,KAAK,CAAC,EAAE;AACvC,oCAAI,EAAE,IAAI;6BACb,CAAC,CAAC;;AAEH,gCAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,MAAK,YAAY,CAAC,MAAM,CAAC,EAAE;AACvD,uCAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;6BACnC;yBACJ;qBACJ,CAAC,CAAC;iBACN;aACJ,CAAC,CAAC;;AAEH,mBAAO,OAAO,CAAC;SAClB;;;WAlFgB,eAAe;;;kBAAf,eAAe","file":"plugin.js","sourcesContent":["import path from \"path\";\nimport fs from \"fs\";\nimport defaults from \"defaults\";\n\nexport class Plugin {\n\n    constructor(filename, basename, pluginName, props = {}) {\n        this.filename = filename;\n        this.basename = basename;\n        this.pluginName = pluginName;\n        this.props = props;\n    }\n}\n\nexport default class PluginDirectory {\n\n    pluginDirs() {\n        let dirs = [];\n\n        if (require.main && Array.isArray(require.main.paths)) {\n            dirs.push(path.dirname(require.main.paths[0]));\n            dirs = dirs.concat(\n                require.main.paths.slice());\n        }\n\n        if (process.env.NODE_PATH) {\n            dirs.push(process.env.NODE_PATH);\n        }\n\n        if (process.env.HOME) {\n            dirs.push(path.join(process.env.HOME, '.node_libraries'));\n            dirs.push(path.join(process.env.HOME, '.node_modules'));\n\n        }\n\n        if (process.config && process.config.variables) {\n            dirs.push(path.join(\n                process.config.variables.node_prefix, 'lib/node_modules'));\n        }\n\n        return dirs;\n    }\n\n    verifyPlugin(plugin, requirements = {}) {\n        requirements = defaults(requirements, {\n            ext: /^\\.js$/ // @todo allow for multiple\n        });\n\n        if (plugin.props.stat.isFile()) {\n            if (!requirements.ext.test(path.extname(plugin.filename))) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    findPlugins(regx = /.*/, pluginPaths = [], opts = {}) {\n        opts = defaults(opts, {\n            match: new RegExp(\"\"),\n            replace: \"\"\n        });\n\n        let plugins = new Map();\n\n        pluginPaths.forEach(pluginPath => {\n            let foundPlugins = null;\n\n            try {\n                foundPlugins = fs.readdirSync(pluginPath);\n            } catch (e) {\n                return;\n            }\n\n            if (foundPlugins) {\n                foundPlugins.forEach(pluginName => {\n                    let stat = fs.statSync(path.join(pluginPath, pluginName));\n\n                    if (regx.test(pluginName)) {\n                        let pluginShortName = pluginName.replace(\n                            opts.match, opts.replace);\n\n                        let plugin = new Plugin(pluginName, pluginPath, \n                            path.basename(pluginShortName, \".js\"), {\n                            stat: stat\n                        });\n\n                        if (!plugins.get(pluginName) && this.verifyPlugin(plugin)) {\n                            plugins.set(pluginName, plugin);\n                        }\n                    }\n                });\n            }\n        });\n\n        return plugins;\n    }\n}\n"],"sourceRoot":"/source/"}